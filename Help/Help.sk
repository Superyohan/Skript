options:
	# 20 lignes de texte dans le tchat avant d'Ãªtre cacher (toujours bien Ã  savoir ^^)
	# NombreDeCommandeParPage: 10
	Logo: &b[&6AntAide&b]
	LogoDebug: &2[DEBUG]
	NombreDeCommandeParPage: 10
	ChargerToutesLesCommandesDuServeur: false



on load:

	send "{@Logo} &eDÃ©marrage du skript d'aide en cours..." to console

	clear {Help::*}
	if {@ChargerToutesLesCommandesDuServeur} is true:
		set {Help::ListeDeToutesLesCommandes::*} to all commands
		send "{@Logo} &b%size of {Help::ListeDeToutesLesCommandes::*}% &7&ocommandes ont Ã©taient trouvÃ© sur ce serveur ! &eðŸ‘€" to console

	else:
		send "{@Logo} &eChargement uniquement des commandes disponible dans la config des messages !" to console
		

	load yaml "/plugins/Skript/YAML/Help/Messages.yml" as "Message_Help"
	send "{@Logo} &7Chargement des messages de la configuration en cours..." to console

	set {Help::Message::DelimiteurHaut} to skript-yaml value "Messages.DelimiteurHaut" from "Message_Help"
	set {Help::Message::DelimiteurBas} to skript-yaml value "Messages.DelimiteurBas" from "Message_Help"
	set {Help::Message::ChoixPage} to skript-yaml value "Messages.ChoixPage" from "Message_Help"
	set {Help::Message::PagePrecedente_Dispo} to skript-yaml value "Messages.PagePrecedente_Dispo" from "Message_Help"
	set {Help::Message::PagePrecedente_PasDispo} to skript-yaml value "Messages.PagePrecedente_PasDispo" from "Message_Help"
	set {Help::Message::PageSuivante_Dispo} to skript-yaml value "Messages.PageSuivante_Dispo" from "Message_Help"
	set {Help::Message::PageSuivante_PasDispo} to skript-yaml value "Messages.PageSuivante_PasDispo" from "Message_Help"
	set {Help::Message::Information} to skript-yaml value "Messages.Information" from "Message_Help"

	set {_NbErreur_1} to 8 - size of {Help::Message::*}
	send "{@Logo} &aChargement des messages de la configuration terminÃ© !" to console
	send "{@Logo} &7&o%{_NbErreur_1}% erreur(s) on(t) Ã©tai(en)t trouvÃ© !" to console

	send "{@Logo} &7Chargement des commandes custom en cours..." to console
	set {Help::CommandeCustom::*} to skript-yaml list "Messages.CommandeCustom" from "Message_Help"
	send "{@Logo} &b%size of {Help::CommandeCustom::*}% &7&ocommandes custom indiquÃ© dans la configuration..." to console

	set {_liste::*} to {Help::ListeDeToutesLesCommandes::*} if {@ChargerToutesLesCommandesDuServeur} is true
	add {Help::CommandeCustom::*} to {_liste::*}

	loop {_liste::*}:
		if skript-yaml value "Messages.%loop-value%" from "Message_Help" is set:
			add loop-value to {Help::ListeDesCommandes::*}
			send "{@Logo} - &aChargement du message de la commande &b/%loop-value%" to console

			set {Help::Message::%loop-value%::*} to skript-yaml list "Messages.%loop-value%" from "Message_Help"

			if {Help::Message::%loop-value%::*} is empty:
				set {Help::Message::%loop-value%} to skript-yaml value "Messages.%loop-value%" from "Message_Help"

			set {Help::Message::%loop-value%} to join {Help::Message::%loop-value%::*} with nl

			clear {_l::*}
			wait 1 tick

		else if {@ChargerToutesLesCommandesDuServeur} is false:
			send "{@Logo} &cErreur&f: &7Impossible de charger le message &e%loop-value%" to console




on tab complete of "/help" or "/aide":
	set tab completions for position 1 to {Help::ListeDesCommandes::*}
	stop


command /help [<text>] [<text>]:
	aliases: /aide
	trigger:
		set {_NbMaxPage} to ceil(size of {Help::ListeDesCommandes::*} / {@NombreDeCommandeParPage})

		if arg 1 is set:
			if arg 1 is "Page" or "P":
				if arg 2 is set:
					if (arg 2 parsed as integer) is between 1 and {_NbMaxPage}:
						set {_page} to arg 2 parsed as integer
					else if (arg 2 parsed as integer) > {_NbMaxPage}:
						set {_page} to {_NbMaxPage}
						
			else:
				set {_fullcmd} to join arg 1 and arg 2 with " "
				# if {Help::ListeDesCommandes::*} contain arg 1:    # NE FONCTIONNE PAS :ant_pleur:
				if {Help::Message::%{_fullcmd}%} is set:
					send "%{Help::Message::DelimiteurHaut}%"
					send ""
					loop {Help::Message::%{_fullcmd}%} split at nl:
						send formatted loop-value
					send ""
					send "%{Help::Message::DelimiteurBas}%"
					stop
					
				else:
					send "&cErreur&f: &7La commande &e%{_fullcmd}% &7ne dispose pas de page d'aide =("
					stop

		if {_page} is not set:
			set {_page} to 1

		set {_1er} to ({_page} - 1) * {@NombreDeCommandeParPage}

		set {_count} to 1
		loop {@NombreDeCommandeParPage} times:
			set {_pos} to {_1er} + {_count}
			add {Help::ListeDesCommandes::%{_pos}%} to {_ListeCmd::*}
			add 1 to {_count}

		loop alphabetical order of {_ListeCmd::*}:
			add loop-value to {_Help::*}

		Help_SendPageAide(command sender,{_Help::*},{_page})



Function Help_SendPageAide(player: command sender, message: texts, page: integer):

	set {_msgDelimiteurHaut} to {Help::Message::DelimiteurHaut}
	set {_msgInformation} to {Help::Message::Information}
	set {_msgDelimiteurBas} to {Help::Message::DelimiteurBas}

	if {_player} is console:
		set {_msgDelimiteurHaut} to regex replace ".(?<=<|\t).*?(?=>|\n)." with "" in {_msgDelimiteurHaut}
		set {_msgInformation} to regex replace ".(?<=<|\t).*?(?=>|\n)." with "" in {_msgInformation}
		set {_msgDelimiteurBas} to regex replace ".(?<=<|\t).*?(?=>|\n)." with "" in {_msgDelimiteurBas}

	replace all "{NL}" with nl in {_msgDelimiteurHaut}
	replace all "{NL}" with nl in {_msgInformation}
	replace all "{NL}" with nl in {_msgDelimiteurBas}

	send "%{_msgDelimiteurHaut}%" to {_player}

	send formatted "%{_msgInformation}%" to {_player}
	send "" to {_player}

	loop {_message::*}:
		send formatted "&bâ„¹ &f- &6/%loop-value%" to {_player} if {_player} is console
		send formatted "<tooltip:%{Help::Message::%loop-value%}%><suggest command:/help %loop-value%>&bâ„¹<reset> &f- <suggest command:/%loop-value%>&6/%loop-value%<reset>" to {_player} if {_player} is not console

	send "" to {_player}

	set {_ChoixBas} to {Help::Message::ChoixPage}
	set {_NbMaxPage} to ceil(size of {Help::ListeDesCommandes::*} / {@NombreDeCommandeParPage})

	replace all "{PAGE_ACTUEL}" with "%{_page}%" in {_ChoixBas}
	replace all "{PAGE_TOTAL}" with "%{_NbMaxPage}%" in {_ChoixBas}

	if {_page} is {_NbMaxPage}:
		replace all "{PAGE_SUIVANTE}" with "%{Help::Message::PageSuivante_PasDispo}%" in {_ChoixBas}
	else:
		replace all "{PAGE_SUIVANTE}" with "%{Help::Message::PageSuivante_Dispo}%" in {_ChoixBas}
		replace all "{PAGE+1}" with "%{_page} + 1%" in {_ChoixBas}

	if {_page}-1 <= 0:
		replace all "{PAGE_PRECEDENTE}" with "%{Help::Message::PagePrecedente_PasDispo}%" in {_ChoixBas}
	else:
		replace all "{PAGE_PRECEDENTE}" with "%{Help::Message::PagePrecedente_Dispo}%" in {_ChoixBas}
		replace all "{PAGE-1}" with "%{_page} - 1%" in {_ChoixBas}

	if {_player} is console:
		set {_ChoixBas} to regex replace ".(?<=<|\t).*?(?=>|\n)." with "" in {_ChoixBas}

	send formatted "%{_ChoixBas}%" to {_player}
	send "%{_msgDelimiteurBas}%" to {_player}

	stop



on unload:
	clear {Help::*}
